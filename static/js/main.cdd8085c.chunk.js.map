{"version":3,"sources":["redux/actions.js","redux/types.js","components/Content.js","components/GoogleFontsLink.js","components/EditTextModal.js","components/CodeModal.js","components/LockButtons.js","components/ColorButtons.js","components/MainButtons.js","components/Tools.js","components/Credits.js","App.js","redux/reducers/uIReducer.js","redux/reducers/dataReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["loadFonts","fonts","type","payload","changeFont","font","link","section","toggleLock","updateText","text","toggleModal","modal","hideSection","hide","togglePicker","changeColor","color","toggleCredits","connect","state","isShowing","heading","uI","body","currentFonts","data","props","className","style","minHeight","items","from","opacity","enter","leave","display","show","rsProps","div","id","fontFamily","family","fontSize","useEffect","WebFont","load","google","families","active","dispatch","rel","href","editTextModalIsOpen","modals","editText","isOpen","headingText","bodyText","toggle","handleChange","e","target","value","getAttribute","Modal","ModalHeader","ModalBody","FormGroup","Label","for","Input","onChange","ModalFooter","Button","onClick","codeModalIsOpen","code","colors","bg","background","readOnly","action","headingLocked","locked","bodyLocked","handleClick","currentTarget","gridTemplateColumns","gridGap","block","size","icon","faLock","faLockOpen","bgPickerIsShowing","colorPickers","textPickerIsShowing","bgColor","textColor","position","faPalette","left","transform","disableAlpha","hex","randomFontGetter","faEdit","faSyncAlt","faCode","Tools","showCredits","config","duration","justifyContent","alignItems","top","right","bottom","zIndex","Promise","resolve","reject","xhr","XMLHttpRequest","onreadystatechange","status","readyState","JSON","parse","responseText","open","send","then","getRandomFont","randomNumber","Math","floor","random","length","selectedFont","replace","width","transition","Container","marginTop","initialState","isLocked","combineReducers","Object","assign","createStore","reducers","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.cdd8085c.chunk.js","sourcesContent":["import {\n  CHANGE_FONT,\n  TOGGLE_LOCK_FONT,\n  CHANGE_TEXT,\n  TOGGLE_MODAL,\n  TOGGLE_SHOW_SECTION,\n  LOAD_FONTS,\n  TOGGLE_COLORPICKER,\n  CHANGE_COLOR,\n  TOGGLE_CREDITS\n} from \"./types\";\n\nexport const loadFonts = fonts => ({\n  type: LOAD_FONTS,\n  payload: {\n    fonts,\n  }\n});\n\nexport const changeFont = (font, link, section) => ({\n  type: CHANGE_FONT,\n  payload: {\n    font,\n    link,\n    section\n  }\n});\n\nexport const toggleLock = section => ({\n  type: TOGGLE_LOCK_FONT,\n  payload: section\n});\n\nexport const updateText = (text, section) => ({\n  type: CHANGE_TEXT,\n  payload: {\n    text,\n    section\n  }\n});\n\nexport const toggleModal = modal => ({\n  type: TOGGLE_MODAL,\n  payload: modal\n});\n\nexport const hideSection = (section, hide) => ({\n  type: TOGGLE_SHOW_SECTION,\n  payload: {\n    section,\n    hide\n  }\n});\n\nexport const togglePicker = (section)=>({\n  type: TOGGLE_COLORPICKER,\n  payload: section\n})\n\nexport const changeColor = (section, color)=>({\n  type: CHANGE_COLOR,\n  payload: {\n    section,\n    color\n  }\n})\n\nexport const toggleCredits = ()=>({\n  type: TOGGLE_CREDITS,\n})","export const LOAD_FONTS = \"LOAD_FONTS\";\nexport const CHANGE_TEXT = \"UPDATE_TEXT\";\nexport const CHANGE_FONT = \"CHANGE_FONT\";\nexport const TOGGLE_LOCK_FONT = \"TOGGLE_LOCK_FONT\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\nexport const TOGGLE_SHOW_SECTION = \"TOGGLE_SHOW_SECTION\";\nexport const TOGGLE_COLORPICKER = \"TOGGLE_COLORPICKER\";\nexport const CHANGE_COLOR = \"CHANGE_COLOR\";\nexport const TOGGLE_CREDITS = \"TOGGLE_CREDITS\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Transition, animated } from \"react-spring/renderprops\";\n\nfunction Content(props) {\n  return props.currentFonts.heading.font && props.currentFonts.body.font ? (\n    <>\n      <div className=\"mt-4\" style={{\n        minHeight: '4rem'\n      }}> \n        <Transition\n          items={props.isShowing.heading}\n          from={{ opacity: 0 }}\n          enter={{ opacity: 1 }}\n          leave={{ display: \"none\" }}\n        >\n          {show =>\n            show &&\n            (rsProps => (\n              <animated.div style={rsProps}>\n                <h2\n                  id=\"text-heading\"\n                  style={{\n                    fontFamily: props.currentFonts.heading.font.family,\n                    fontSize: \"2.5rem\"\n                  }}\n                >\n                  {props.text.heading}\n                </h2>\n              </animated.div>\n            ))\n          }\n        </Transition>\n      </div>\n      <div>\n        <Transition\n          items={props.isShowing.body}\n          from={{ opacity: 0 }}\n          enter={{ opacity: 1 }}\n          leave={{ display: \"none\" }}\n        >\n          {show =>\n            show &&\n            (rsProps => (\n              <animated.div style={rsProps}>\n                <p\n                  id=\"text-body\"\n                  style={{\n                    fontFamily: props.currentFonts.body.font.family\n                  }}\n                >\n                  {props.text.body}\n                </p>\n              </animated.div>\n            ))\n          }\n        </Transition>\n      </div>\n    </>\n  ) : null;\n}\n\nconst mapStateToProps = state => ({\n  isShowing: {\n    heading: state.uI.heading.isShowing,\n    body: state.uI.body.isShowing\n  },\n  currentFonts: state.data.currentFonts,\n  text: state.data.text\n});\n\nexport default connect(mapStateToProps)(Content);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport WebFont from \"webfontloader\";\nimport { hideSection } from \"../redux/actions\";\n\nfunction GoogleFontsLink(props) {\n  useEffect(() => {\n    if (props.currentFonts.heading.font && props.currentFonts.body.font)\n      WebFont.load({\n        google: {\n          families: [\n            props.currentFonts.heading.font.family,\n            props.currentFonts.body.font.family\n          ]\n        },\n        active: () => {\n          props.dispatch(hideSection(\"heading\", false));\n          props.dispatch(hideSection(\"body\", false));\n        }\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.link]);\n  return props.currentFonts.heading.font && props.currentFonts.body.font ? (\n    <HelmetProvider>\n      <Helmet>\n        <link rel=\"stylesheet\" href={props.link} />\n      </Helmet>\n    </HelmetProvider>\n  ) : null;\n}\n\nconst mapStateToProps = state => ({\n  currentFonts: state.data.currentFonts,\n  link: `https://fonts.googleapis.com/css?family=${state.data.currentFonts.heading.link}|${state.data.currentFonts.body.link}`\n});\n\nexport default connect(mapStateToProps)(GoogleFontsLink);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateText, toggleModal } from \"../redux/actions\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Input,\n  FormGroup,\n  Label\n} from \"reactstrap\";\n\nfunction EditTextModal(props) {\n  const toggle = () => {\n    props.dispatch(toggleModal(\"editText\"));\n  };\n\n  const handleChange = e => {\n    props.dispatch(\n      updateText(e.target.value, e.target.getAttribute(\"section\"))\n    );\n  };\n  return (\n    <div>\n      <Modal isOpen={props.editTextModalIsOpen} toggle={toggle}>\n        <ModalHeader>Edit Text</ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <Label for=\"text-heading\">Heading Text</Label>\n            <Input\n              id=\"text-heading\"\n              type=\"text\"\n              section=\"heading\"\n              value={props.headingText}\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"text-body\">Body text</Label>\n            <Input\n              id=\"text-body\"\n              type=\"textarea\"\n              section=\"body\"\n              value={props.bodyText}\n              onChange={handleChange}\n            />\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"danger\" onClick={toggle}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  editTextModalIsOpen: state.uI.modals.editText.isOpen,\n  headingText: state.data.text.heading,\n  bodyText: state.data.text.body\n});\nexport default connect(mapStateToProps)(EditTextModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleModal } from \"../redux/actions\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Input,\n  FormGroup,\n  Label\n} from \"reactstrap\";\n\nfunction CodeModal(props) {\n  const toggle = () => {\n    props.dispatch(toggleModal(\"code\"));\n  };\n  return (\n    <Modal isOpen={props.codeModalIsOpen} toggle={toggle}>\n      <ModalHeader>Get the code!</ModalHeader>\n      <ModalBody>\n        <FormGroup>\n          <Label for=\"head-link\">\n            Copy/Paste this into the head section of your HTML document...\n          </Label>\n          <Input type=\"textarea\" id=\"head-link\" value={props.link} readOnly />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"css\">Copy/Paste this into your CSS...</Label>\n          {props.currentFonts.heading.font && props.currentFonts.body.font ? (\n            <Input\n              type=\"textarea\"\n              id=\"css\"\n              value={`font-family: '${props.currentFonts.heading.font.family}';\\nfont-family: '${props.currentFonts.body.font.family}';`}\n              readOnly\n            />\n          ) : null}\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"css\">Colors</Label>\n          {/* {props.currentFonts.heading.font && props.currentFonts.body.font ? ( */}\n            <Input\n              type=\"textarea\"\n              id=\"css\"\n              value={`background-color: ${props.colors.bg};\\ncolor: ${props.colors.text};`}\n              readOnly\n            />\n          {/* ) : null} */}\n        </FormGroup>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"danger\" action=\"toggle\" onClick={toggle}>\n          Close\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n\nconst mapStateToProps = state => ({\n  codeModalIsOpen: state.uI.modals.code.isOpen,\n  link: `https://fonts.googleapis.com/css?family=${state.data.currentFonts.heading.link}|${state.data.currentFonts.body.link}`,\n  currentFonts: state.data.currentFonts,\n  colors: {\n    bg: state.uI.colors.background,\n    text: state.uI.colors.text\n  }\n});\nexport default connect(mapStateToProps)(CodeModal);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleLock } from \"../redux/actions\";\nimport { Button } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLock, faLockOpen } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction LockButtons(props) {\n  const handleClick = e => {\n    props.dispatch(toggleLock(e.currentTarget.getAttribute(\"section\")));\n  }\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gridGap: \"1px\"\n      }}\n    >\n      <Button\n        block\n        color={props.headingLocked ? \"danger\" : \"success\"}\n        size=\"sm\"\n        section=\"heading\"\n        onClick={handleClick}\n      >\n        <div className=\"d-block\">\n          Heading\n        </div>\n        {props.headingLocked ? (\n            <FontAwesomeIcon icon={faLock} />\n        ) : (\n          <FontAwesomeIcon icon={faLockOpen} />\n        )}\n      </Button>\n      <Button\n        block\n        className=\"m-0\"\n        color={props.bodyLocked ? \"danger\" : \"success\"}\n        size=\"sm\"\n        section=\"body\"\n        onClick={handleClick}\n      >\n        <div className=\"d-block\">\n          Body\n        </div>\n        {props.bodyLocked ? (\n            <FontAwesomeIcon icon={faLock} />\n        ) : (\n          <FontAwesomeIcon icon={faLockOpen} />\n        )}\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  headingLocked: state.data.currentFonts.heading.locked,\n  bodyLocked: state.data.currentFonts.body.locked\n});\nexport default connect(mapStateToProps)(LockButtons);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { togglePicker, changeColor } from \"../redux/actions\";\nimport { Button } from \"reactstrap\";\nimport { ChromePicker } from \"react-color\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPalette } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ColorButtons(props) {\n  const handleClick = e => {\n    props.dispatch(togglePicker(e.target.getAttribute(\"section\")));\n  };\n\n  const handleBgChange = color => {\n    props.dispatch(changeColor(\"background\", color.hex));\n  };\n  const handleTextChange = color => {\n    props.dispatch(changeColor(\"text\", color.hex));\n  };\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr\",\n        gridGap: \"1px\"\n      }}\n    >\n      <div style={{ position: \"relative\" }}>\n        <Button block size=\"sm\" section=\"background\" onClick={handleClick}>\n          {props.bgPickerIsShowing\n            ? \"Close Background Palette\"\n            : \"Open Background Palette\"}{\" \"}\n          <FontAwesomeIcon icon={faPalette} />\n        </Button>\n        {props.bgPickerIsShowing ? (\n          <div\n            style={{\n              position: \"absolute\",\n              left: \"50%\",\n              transform: \"translateX(-50%)\"\n            }}\n          >\n            <ChromePicker\n              disableAlpha\n              color={props.bgColor}\n              onChange={handleBgChange}\n            />\n          </div>\n        ) : null}\n      </div>\n      <div style={{ position: \"relative\" }}>\n        <Button block size=\"sm\" section=\"text\" onClick={handleClick}>\n          {props.textPickerIsShowing\n            ? \"Close Text Palette\"\n            : \"Open Text Palette\"}{\" \"}\n          <FontAwesomeIcon icon={faPalette} />\n        </Button>\n        {props.textPickerIsShowing ? (\n          <div\n            style={{\n              position: \"absolute\",\n              left: \"50%\",\n              transform: \"translateX(-50%)\"\n            }}\n          >\n            <ChromePicker\n              disableAlpha\n              color={props.textColor}\n              onChange={handleTextChange}\n            />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  bgPickerIsShowing: state.uI.colorPickers.background,\n  textPickerIsShowing: state.uI.colorPickers.text,\n  bgColor: state.uI.colors.background,\n  textColor: state.uI.colors.text\n});\nexport default connect(mapStateToProps)(ColorButtons);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { hideSection, toggleModal } from \"../redux/actions\";\nimport { Button } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSyncAlt, faEdit, faCode } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction MainButtons(props) {\n  const handleClick = e => {\n    switch (e.currentTarget.id) {\n      case \"refresh\":\n        if (!props.currentFonts.heading.locked) {\n          props.dispatch(hideSection(\"heading\", true));\n          props.randomFontGetter(\"heading\");\n        }\n        if (!props.currentFonts.body.locked) {\n          props.dispatch(hideSection(\"body\", true));\n          props.randomFontGetter(\"body\");\n        }\n\n        break;\n      case \"get-code\":\n        props.dispatch(toggleModal(\"code\"));\n        break;\n      case \"edit-text\":\n        props.dispatch(toggleModal(\"editText\"));\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"1fr 1fr 1fr\"\n      }}\n    >\n      <div>\n        <Button\n          block\n          color=\"primary\"\n          size=\"lg\"\n          id=\"edit-text\"\n          onClick={handleClick}\n        >\n          <FontAwesomeIcon icon={faEdit} />\n        </Button>\n      </div>\n      <div>\n        <Button\n          block\n          color=\"warning\"\n          size=\"lg\"\n          id=\"refresh\"\n          onClick={handleClick}\n        >\n          <FontAwesomeIcon icon={faSyncAlt} />\n        </Button>\n      </div>\n      <div>\n        <Button\n          block\n          color=\"info\"\n          size=\"lg\"\n          id=\"get-code\"\n          onClick={handleClick}\n        >\n          <FontAwesomeIcon icon={faCode} />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  currentFonts: state.data.currentFonts\n});\nexport default connect(mapStateToProps)(MainButtons);\n","import React from 'react'\nimport LockButtons from './LockButtons'\nimport ColorButtons from './ColorButtons'\nimport MainButtons from './MainButtons'\n\nexport default function Tools(props) {\n    return (\n        <div style={{ background: 'grey'}}>\n            <LockButtons />\n            <ColorButtons />\n            <MainButtons randomFontGetter={props.randomFontGetter}/>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleCredits } from \"../redux/actions\";\nimport { Transition } from \"react-spring/renderprops\";\n\nfunction Credits(props) {\n  const handleClick = () => {\n    props.dispatch(toggleCredits());\n  };\n  //   if (props.isShowing) {\n  return (\n    <Transition\n      items={props.isShowing}\n      from={{ opacity: 0 }}\n      enter={{ opacity: 1 }}\n      leave={{ opacity: 0 }}\n      config={{ duration: 100}}\n    >\n      {show =>\n        show &&\n        (props => (\n          <div\n            className=\"text-light\"\n            style={{\n              ...props,\n              position: \"fixed\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              top: 0,\n              right: 0,\n              bottom: 0,\n              left: 0,\n              background: \"rgba(0,0,0,.9)\",\n              zIndex: 2000\n            }}\n            onClick={handleClick}\n          >\n            <div>\n              <h1\n                style={{\n                  display: \"inline-block\"\n                }}\n              >\n                Google Fonts Random Combiner\n              </h1>\n              {` `}\n              <small>(v1.0.0)</small>\n              <p className=\"lead\">\n                Helping you to find unique font combinations quickly!\n              </p>\n              <p>\n                Concept, design and production by{\" \"}\n                <a href=\"mailto:fuertenerd@gmail.com\">Fuerte Nerd</a>.\n              </p>\n              <p>\n                <small>&copy; 2019 Fuerte Nerd</small>\n              </p>\n            </div>\n          </div>\n        ))\n      }\n    </Transition>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isShowing: state.uI.showCredits\n});\nexport default connect(mapStateToProps)(Credits);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { loadFonts, changeFont, toggleCredits } from \"./redux/actions\";\nimport { Container, Button } from \"reactstrap\";\nimport \"./App.scss\";\n\nimport Content from \"./components/Content\";\nimport GoogleFontsLink from \"./components/GoogleFontsLink\";\nimport EditTextModal from \"./components/EditTextModal\";\nimport CodeModal from \"./components/CodeModal\";\nimport Tools from \"./components/Tools\"\nimport Credits from \"./components/Credits\";\n\nfunction App(props) {\n  useEffect(() => {\n    new Promise((resolve, reject) => {\n      let xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (xhr.status === 200 && xhr.readyState === 4) {\n          resolve(JSON.parse(xhr.responseText));\n        } else if (xhr.status !== 200 && xhr.readyState === 4) {\n          reject(xhr.responseText);\n        }\n      };\n      xhr.open(\n        \"GET\",\n        \"https://www.googleapis.com/webfonts/v1/webfonts?key=AIzaSyAZPt82j4_tyfPLEeWYVp14aXp5SM1-PME\",\n        true\n      );\n      xhr.send();\n    }).then(fonts => {\n      props.dispatch(loadFonts(fonts));\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    getRandomFont(\"heading\");\n    getRandomFont(\"body\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.data]);\n\n  const getRandomFont = target => {\n    if (props.data) {\n      const randomNumber = Math.floor(Math.random() * props.data.items.length);\n      const selectedFont = props.data.items[randomNumber];\n      const link = selectedFont.family.replace(/ /g, \"+\");\n      props.dispatch(changeFont(selectedFont, link, target));\n    }\n  };\n\n  const handleClick = ()=>{\n    props.dispatch(toggleCredits())\n  }\n\n  return (\n    <div className=\"App\" style={{\n      background: props.bgColor,\n      color: props.textColor,\n      minHeight: '100vh',\n      width: '100vw',\n      transition: 'all .15s'\n    }}>\n      <GoogleFontsLink />\n      <EditTextModal />\n      <CodeModal />\n      <Tools randomFontGetter={getRandomFont} />\n      <Container style={{\n        marginTop: '3rem'\n      }}>\n        <Content />\n      </Container>\n      <Credits />\n      <Button color=\"secondary\" size=\"sm\" onClick={handleClick} style={{\n        position: 'fixed',\n        bottom: 0,\n        right: 0\n      }}>About</Button>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    data: state.data.data,\n    currentFonts: state.data.currentFonts,\n    bgColor: state.uI.colors.background,\n    textColor: state.uI.colors.text\n  };\n};\nexport default connect(mapStateToProps)(App);\n","import {\n  TOGGLE_MODAL,\n  TOGGLE_SHOW_SECTION,\n  TOGGLE_LOCK_FONT,\n  TOGGLE_COLORPICKER,\n  CHANGE_COLOR,\n  TOGGLE_CREDITS\n} from \"../types\";\n\nconst initialState = {\n  heading: {\n    isShowing: false,\n    isLocked: false\n  },\n  body: {\n    isShowing: false,\n    isLocked: false\n  },\n  modals: {\n    editText: {\n      isOpen: false\n    },\n    code: {\n      isOpen: false\n    }\n  },\n  colorPickers: {\n    text: false,\n    background: false\n  },\n  colors: {\n    text: \"#222222\",\n    background: \"#fafafa\"\n  },\n  showCredits: false\n};\n\nexport default (state = initialState, action) => {\n  let data = Object.assign({}, state);\n\n  switch (action.type) {\n    case TOGGLE_MODAL:\n      data.modals[action.payload].isOpen = !data.modals[action.payload].isOpen;\n      return data;\n\n    case TOGGLE_SHOW_SECTION:\n      data[action.payload.section].isShowing = !action.payload.hide;\n      return data;\n\n    case TOGGLE_LOCK_FONT:\n      data[action.payload].isLocked = !data[action.payload].isLocked;\n      return data;\n\n    case TOGGLE_COLORPICKER:\n      data.colorPickers[action.payload] = !data.colorPickers[action.payload];\n      return data;\n\n    case CHANGE_COLOR:\n      data.colors[action.payload.section] = action.payload.color;\n      return data;\n\n    case TOGGLE_CREDITS:\n      data.showCredits = !data.showCredits;\n      return data;\n    default:\n      return data;\n  }\n};\n","import { CHANGE_FONT, CHANGE_TEXT, TOGGLE_LOCK_FONT, LOAD_FONTS } from \"../types\";\n\nconst initialState = {\n  data: null,\n  link: null,\n  currentFonts: {\n    heading: {\n      font: null,\n      link: \"\",\n      locked: false\n    },\n    body: {\n      font: null,\n      link: \"\",\n      locked: false\n    }\n  },\n  text: {\n    heading: \"Lorem ipsum dolor sit\",\n    body:\n      \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Exercitationem iste quos facere aliquam facilis quis totam pariatur ipsum saepe possimus soluta necessitatibus, expedita nihil quisquam sint. Sit voluptatibus neque repudiandae omnis at provident accusantium dolores! Commodi, nemo quaerat alias dolorem atque cupiditate illum vero reiciendis molestiae nesciunt impedit tempora voluptatibus voluptates quidem facere excepturi quibusdam saepe laudantium neque rerum! Ipsam.\"\n  }\n};\n\nexport default (state = initialState, action) => {\n  let data = Object.assign({}, state);\n\n  switch (action.type) {\n    case LOAD_FONTS:\n      data.data = action.payload.fonts;\n      return data;\n    case CHANGE_FONT:\n      data.currentFonts[action.payload.section].font = action.payload.font;\n      data.currentFonts[action.payload.section].link = action.payload.link\n      \n      return data;\n    case CHANGE_TEXT:\n      data.text[action.payload.section] = action.payload.text;\n      return data;\n    case TOGGLE_LOCK_FONT:\n      data.currentFonts[action.payload].locked = !data.currentFonts[\n        action.payload].locked;\n      return data;\n    default:\n      return data;\n  }\n};\n","import { combineReducers } from 'redux'\nimport uI from './uIReducer';\nimport data from './dataReducer'\n\nexport default combineReducers({\n    uI,\n    data\n})","import { createStore } from \"redux\";\nimport reducers from \"./reducers\";\n\nexport default createStore(reducers);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}